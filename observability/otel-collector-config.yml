# =================================================================
# OPENTELEMETRY COLLECTOR - CONFIGURAÇÃO DO HUB CENTRAL
# =================================================================

# NOVO: Habilita extensões adicionais
extensions:
  health_check:
    endpoint: 0.0.0.0:13133

# 1. RECEIVERS: Como o coletor recebe dados
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"

# 2. PROCESSORS: Como o coletor processa os dados recebidos
processors:
  batch:
    send_batch_size: 1024
    timeout: 10s
  memory_limiter:
    check_interval: 1s
    limit_percentage: 75
    spike_limit_percentage: 15

# 3. EXPORTERS: Para onde o coletor envia os dados
exporters:
  # Exportador para Logs (Loki)
  loki:
    endpoint: "http://loki:3100/loki/api/v1/push"
  
  # Exportador para Métricas (Prometheus)
  prometheus:
    endpoint: "0.0.0.0:8889"

  # Exportador para Traces (Tempo)
  otlp/tempo:
    endpoint: "tempo:4317" # Envia para o Tempo via gRPC
    tls:
      insecure: true

  # (Opcional) Exportador para debug no console do collector
  logging:
    loglevel: info

# 4. SERVICE: Define os pipelines (liga receivers, processors e exporters)
service:
  extensions: [health_check] # NOVO: Ativa a extensão de health check
  pipelines:
    # Pipeline de TRACES
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [otlp/tempo, logging] # Envia para Tempo e para o log do collector

    # Pipeline de MÉTRICAS
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [prometheus, logging] # Envia para Prometheus e para o log do collector

    # Pipeline de LOGS
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [loki, logging] # Envia para Loki e para o log do collector